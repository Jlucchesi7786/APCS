/**
 * This class stores information about any items in the game.
 * @author Dr. Cheese
 */
public class Item {
	public String type;
	int baseMod;
	int itemMod;
	public int mod;
	public String name;

	public boolean weapon;
	public boolean gear;
	public boolean shield;
	public boolean dmgBoost;

	String[] types = {"Longsword", "Iron Shield", "Shortsword", "Amulet of Strength"};

	/**
	 * This constructor is used when the author wants to make a specific item.
	 * @param type String
	 * @param itemMod int
	 */
	Item(String type, int itemMod) {
		this.type = type;
		this.itemMod = itemMod;
		typeCheck();
		mod = baseMod + itemMod;
		setName();
	}

	/**
	 * This constructor is used to make a random item.
	 */
	Item() {
		int rand = (int) Math.ceil(Math.random()*types.length)-1;
		type = types[rand];
		itemMod = (int) Math.ceil(Math.random()*10);
		typeCheck();
		mod = baseMod + itemMod;
		setName();
	}

	/**
	 * This method is used as the final part of construction to set the name of the item with a bonus and type.
	 */
	private void setName() {
		if (itemMod != 0) {
			name = "+" + itemMod + " " + type;
		} else {
			name = "Regular " + type;
		}
	}

	/**
	 * This method is used to check what type the author or random number wants to set it too, then changes some variables based on which type it is.
	 */
	private void typeCheck() {
		if (type.equals("Longsword")) {
			baseMod = 4;
			weapon = true;
			gear = false;
			shield = false;
			
			dmgBoost = true;
		} else if (type.equals("Shortsword")) {
			baseMod = 2;
			weapon = true;
			gear = false;
			shield = false;
			
			dmgBoost = true;
		}

		if (type.equals("Amulet of Strength")) {
			baseMod = 0;
			weapon = false;
			gear = true;
			shield = false;
			
			dmgBoost = true;
		} else if (type.equals("Iron Shield")) {
			baseMod = 2;
			weapon = false;
			gear = true;
			shield = true;
			
			dmgBoost = false;
		}
	}

	/**
	 * This toString function returns the details of the Item in question.
	 */
	public String toString() {		
		return (type + ", +" + itemMod + "\n - It has a base mod of +" + baseMod + "\n - Combined with the +" + itemMod + ", it has a total mod of +" + mod);
	}

	public void setItemMod(int itemMod) {
		this.itemMod = itemMod;
	}

	public void setName(String name) {
		this.name = name;
	}
}
